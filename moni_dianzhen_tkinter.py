import tkinter as tk
import time

SCREEN_WID = 128
SCREEN_HEI = 64
WIN_WID = 640
WIN_HEI = 320
DISPLAY_COLOR = '#00ffff'

# G_R_A_M = [0x00 for i in range(0, SCREEN_WID * (SCREEN_HEI // 8))]
G_R_A_M = [0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E,0x00, 0x00, 0x42, 0x7F, 0x40, 0x00,
0x00, 0x42, 0x61, 0x51, 0x49, 0x46,0x00, 0x21, 0x41, 0x45, 0x4B, 0x31,
0x00, 0x18, 0x14, 0x12, 0x7F, 0x10,0x00, 0x27, 0x45, 0x45, 0x45, 0x39,
0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30,0x00, 0x01, 0x71, 0x09, 0x05, 0x03,
0x00, 0x36, 0x49, 0x49, 0x49, 0x36,0x00, 0x06, 0x49, 0x49, 0x29, 0x1E,
0x00, 0x00, 0x56, 0x36, 0x00, 0x00,0x00, 0x32, 0x49, 0x59, 0x51, 0x3E,
0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C,0x00, 0x7F, 0x49, 0x49, 0x49, 0x36,
0x00, 0x3E, 0x41, 0x41, 0x41, 0x22,0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C,
0x00, 0x7F, 0x49, 0x49, 0x49, 0x41,0x00, 0x7F, 0x09, 0x09, 0x09, 0x01,
0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A,0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F,
0x00, 0x20, 0x40, 0x41, 0x3F, 0x01,0x00, 0x00, 0x41, 0x7F, 0x41, 0x00,
0x00, 0x7F, 0x08, 0x14, 0x22, 0x41,0x00, 0x7F, 0x40, 0x40, 0x40, 0x40,
0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F,0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F,
0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E,0x00, 0x7F, 0x09, 0x09, 0x09, 0x06,
0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E,0x00, 0x7F, 0x09, 0x19, 0x29, 0x46,
0x00, 0x46, 0x49, 0x49, 0x49, 0x31,0x00, 0x01, 0x01, 0x7F, 0x01, 0x01,
0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F,0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F,
0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F,0x00, 0x63, 0x14, 0x08, 0x14, 0x63,
0x00, 0x07, 0x08, 0x70, 0x08, 0x07,0x00, 0x61, 0x51, 0x49, 0x45, 0x43,
0x00, 0x20, 0x54, 0x54, 0x54, 0x78,0x00, 0x7F, 0x48, 0x44, 0x44, 0x38,
0x00, 0x38, 0x44, 0x44, 0x44, 0x20,0x00, 0x38, 0x44, 0x44, 0x48, 0x7F,
0x00, 0x38, 0x54, 0x54, 0x54, 0x18,0x00, 0x08, 0x7E, 0x09, 0x01, 0x02,
0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C,0x00, 0x7F, 0x08, 0x04, 0x04, 0x78,
0x00, 0x00, 0x44, 0x7D, 0x40, 0x00,0x00, 0x40, 0x80, 0x84, 0x7D, 0x00,
0x00, 0x7F, 0x10, 0x28, 0x44, 0x00,0x00, 0x00, 0x41, 0x7F, 0x40, 0x00,
0x00, 0x7C, 0x04, 0x18, 0x04, 0x78,0x00, 0x7C, 0x08, 0x04, 0x04, 0x78,
0x00, 0x38, 0x44, 0x44, 0x44, 0x38,0x00, 0xFC, 0x24, 0x24, 0x24, 0x18,
0x00, 0x18, 0x24, 0x24, 0x18, 0xFC,0x00, 0x7C, 0x08, 0x04, 0x04, 0x08,
0x00, 0x48, 0x54, 0x54, 0x54, 0x20,0x00, 0x04, 0x3F, 0x44, 0x40, 0x20,
0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C,0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C,
0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C,0x00, 0x44, 0x28, 0x10, 0x28, 0x44,
0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C,0x00, 0x44, 0x64, 0x54, 0x4C, 0x44,
0x14, 0x14, 0x14, 0x14, 0x14, 0x14,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x08, 0x08, 0x08, 0x08, 0x08,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x2f, 0x00, 0x00,
0x00, 0x00, 0x07, 0x00, 0x07, 0x00,0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14,
0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12,0x00, 0x62, 0x64, 0x08, 0x13, 0x23,
0x00, 0x36, 0x49, 0x55, 0x22, 0x50,0x00, 0x00, 0x05, 0x03, 0x00, 0x00,
0x00, 0x00, 0x1c, 0x22, 0x41, 0x00,0x00, 0x00, 0x41, 0x22, 0x1c, 0x00,
0x00, 0x14, 0x08, 0x3E, 0x08, 0x14,0x00, 0x08, 0x08, 0x3E, 0x08, 0x08,
0x00, 0x00, 0x00, 0xA0, 0x60, 0x00,0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00, 0x00, 0x60, 0x60, 0x00, 0x00,0x00, 0x20, 0x10, 0x08, 0x04, 0x02,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00,]
# ---------------------------------------------------------------------- #
def show_gram(data):
    for page in range(0, SCREEN_HEI // 8):
        for col in range(0, SCREEN_WID):
            col_load = data[page * SCREEN_WID + col]
            for line in range(0, 8):
                state = col_load & (0x01 << line)
                show_point(col, page * 8 + line, state)

# def show_gram():
#     pass

def show_point(x, y, state):
    dis_x = (x * SingleWidth) + 0.5
    dis_y = (y * SingleHeight) + 0.5
    if state:
        DotMatrixScreen.create_rectangle(dis_x, dis_y, dis_x+SingleWidth-0.5, dis_y+SingleHeight-0.5, state='disabled', fill=DISPLAY_COLOR, outline= '')
    else:
        DotMatrixScreen.create_rectangle(dis_x, dis_y, dis_x+SingleWidth-0.5, dis_y+SingleHeight-0.5, state='disabled', fill='#333333', outline= '')
# ---------------------------------------------------------------------- #

def SwitchAClick():
    global G_R_A_M
    show_gram(G_R_A_M)

def SwitchBClick():
    pass

def SwitchCClick():
    print('C')

def SwitchDClick():
    print('D')

def Quit():
    global mainloop
    mainloop = False


#  init--------------------------------------------------------#
Windows = tk.Tk()
Windows.title('moni_dianzhen')
Windows.geometry('+0+0')
Windows.resizable(0, 0)
Windows.protocol('WM_DELETE_WINDOW', Quit)  # 帶函數名而不是函數返回值，沒有括號！！

SwitchA = tk.Button(Windows, text='A', command=SwitchAClick)
SwitchA.grid(column=0, row=0)
SwitchB = tk.Button(Windows, text='B', command=SwitchBClick)
SwitchB.grid(column=0, row=1)
SwitchC = tk.Button(Windows, text='C', command=SwitchCClick)
SwitchC.grid(column=0, row=2)
SwitchD = tk.Button(Windows, text='D', command=SwitchDClick)
SwitchD.grid(column=0, row=3)

DotMatrixScreen = tk.Canvas(Windows, bg='#333333', height=str(WIN_HEI), width=str(WIN_WID))
DotMatrixScreen.grid(column=1, row=0, rowspan=4)

SingleWidth = WIN_WID // SCREEN_WID
SingleHeight = WIN_HEI // SCREEN_HEI
for i in range(1, SCREEN_WID + 1):
    DotMatrixScreen.create_line(i * SingleHeight, 1, i * SingleHeight, WIN_HEI+1, fill='#555555')
for i in range(1, SCREEN_HEI + 1):
    DotMatrixScreen.create_line(1, i * SingleWidth, WIN_WID+1, i * SingleWidth, fill='#555555')
# start--------------------------------------------------------#
mainloop = True
while mainloop:
    time.sleep(0.05)
    Windows.update()
Windows.quit()
